pipeline {
    agent any
    tools {
        maven 'maven'
    }
    environment {
        registry = "public.ecr.aws/a9o3g1g2/petclinic"
    }
    stages {
        stage('git checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/main']],
                extensions: [],
                userRemoteConfigs: [[credentialsId: 'GIT_CRED_siv',
                url: 'https://github.com/Cvaaaa/springboot-app.git']])
            }
        }
        stage('unit test') {
            steps {
                sh 'mvn test'
            }
        }
        stage('build test') {
            steps {
                sh 'mvn clean test package'
            }
        }
        stage('install') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('Build Image') {
            steps {
                script {
                    docker.build registry
                }
            }
        }
        stage('Push Image to Docker') {
            steps {
                script {
                    sh "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/a9o3g1g2"
                    sh "docker push public.ecr.aws/a9o3g1g2/petclinic:latest"
                }
            }
        }
        stage('Deploy to EKS') {
            steps {
                script {
                    withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'k8s', namespace: '', restrictKubeConfigAccess: false, serverUrl: '') {
                        sh "kubectl apply -f eks-deploy-k8s.yaml"
                    }
                }
            }
        }
    }
}